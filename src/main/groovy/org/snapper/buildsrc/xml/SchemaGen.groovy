package org.snapper.buildsrc.xml

import org.gradle.api.DefaultTask
import org.gradle.api.tasks.Input
import org.gradle.api.tasks.InputFile
import org.gradle.api.tasks.TaskAction

class SchemaGen extends DefaultTask {

    /**The file representing the Java class from which to generate the XML Schema.*/
    File schemaGenClass

    /**The destination folder for the generated XML Schema.*/
    String destDir

    /**The Java bytecode files required to be on the classpath. Typically this will be "buildDir/classes/main."*/
    String classesDir

    /**A name for the generated XML Schema.*/
    String xsdFileName

    /**
     * A string specifying the "schemagen" command.
     * NOTE: The "schemagen" command should be included in the JDK which
     * should be in the system path environment variable.
     */
    private final String command = "cmd /c schemagen"

    @Input
    getXsdFileName() {
        this.xsdFileName
    }

    void setXsdFileName(String xsdFileName) {
        this.xsdFileName = xsdFileName
    }

    void setXsdFileName(File xsdFileName) {
        this.xsdFileName = xsdFileName.name
    }

    @InputFile
    getSchemaGenClass() {
        this.schemaGenClass
    }

    void setSchemaGenClass(File schemaGenClass) {
        this.schemaGenClass = schemaGenClass
    }

    void setSchemaGenClass(String schemaGenClass) {
        this.schemaGenClass = project.file schemaGenClass
    }

    @Input
    getDestDir() {
        this.destDir
    }

    void setDestDir(String destDir) {
        this.destDir = destDir
    }

    void setDestDir(File destDir) {
        this.destDir = destDir.absolutePath
    }

    @Input
    getClassesDir() {
        this.classesDir
    }

    void setClassesDir(String classesDir) {
        this.classesDir = classesDir
    }

    void setClassesDir(File classesDir) {
        this.classesDir = classesDir.absolutePath
    }

    SchemaGen() {
        group = "snapper-xml"
        description = "Create an XML Schema document from a Java class"
        onlyIf {
            this.schemaGenClass != null && this.destDir != null && this.classesDir != null
        }
    }

    @TaskAction
    void start() {
        project.file(this.destDir).mkdirs()

        /*The entire command to execute, including all input fields for the task*/
        final String run = "${this.command} -cp ${this.classesDir} ${this.schemaGenClass.absolutePath} -d ${this.destDir}"

        /*Execute the schemagen command*/
        println run.execute().text

        /*Use the Ant Move task to rename the schema1.xsd file generated by default*/
        if(project.file("${this.destDir}/schema1.xsd").exists())
            project.ant.move(file: project.file("${this.destDir}/schema1.xsd"), tofile: project.file("${this.destDir}/${this.xsdFileName}"))
    }
}
